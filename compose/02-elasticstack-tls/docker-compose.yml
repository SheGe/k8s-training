version: '2.2'

services:
  es:
    build:
      context: .
      args:
        VERSION: ${VERSION}
    image: elasticsearch:${VERSION}
    container_name: es
    environment:
      - ELASTIC_USERNAME=docker
      - ELASTIC_PASSWORD=compose
      - node.name=es
      - discovery.type=single-node
      - "xpack.license.self_generated.type=basic"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true # <2>
      - xpack.security.http.ssl.key=$CERTS_DIR/es/es.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es/es.crt
      - xpack.security.transport.ssl.enabled=true # <3>
      - xpack.security.transport.ssl.verification_mode=certificate # <4>
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es/es.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es/es.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
    ports:
      - 9200:9200
    networks:
      - elastic

    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  kib:
    image: docker.elastic.co/kibana/kibana:${VERSION}
    container_name: kib
    depends_on: {"es": {"condition": "service_healthy"}}
    ports:
      - 5601:5601
    environment:
      SERVERNAME: localhost
      ELASTICSEARCH_URL: https://es:9200
      ELASTICSEARCH_HOSTS: https://es:9200
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: $CERTS_DIR/ca/ca.crt
      SERVER_SSL_ENABLED: "true"
      SERVER_SSL_KEY: $CERTS_DIR/kib/kib.key
      SERVER_SSL_CERTIFICATE: $CERTS_DIR/kib/kib.crt
      ELASTICSEARCH_USERNAME: docker
      ELASTICSEARCH_PASSWORD: compose
    volumes:
      - certs:$CERTS_DIR
    networks:
      - elastic
volumes:
  data:
    driver: local
  certs:
    driver: local

networks:
  elastic:
    driver: bridge